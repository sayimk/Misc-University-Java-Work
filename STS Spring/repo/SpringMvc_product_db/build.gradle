buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'


jar {
	baseName = 'ProductCatalogue'
	version = '0.0.1-SNAPSHOT'
}

repositories {
	mavenCentral()
}

eclipse {
	project {
	  name = 'SpringMvc_product_db'
	  buildCommand 'org.eclipse.jdt.core.javabuilder'
	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	  buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
	  buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
	  natures 'org.eclipse.jdt.core.javanature', 'org.eclipse.buildship.core.gradleprojectnature', 'org.springframework.ide.eclipse.core.springnature', 'org.eclipse.wst.common.project.facet.core.nature'
	}
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	// JSP
	compile("org.apache.tomcat.embed:tomcat-embed-jasper:9.0.0.M11")
	compile("javax.servlet:jstl:1.2")
	// bootstrap
	compile("org.webjars:bootstrap:3.3.7")
	//lombok
	compile('org.projectlombok:lombok:1.16.10')
	// cucumber
	testCompile("info.cukes:cucumber-spring:1.2.5")
	testCompile("info.cukes:cucumber-java:1.2.5")
	testCompile("info.cukes:cucumber-junit:1.2.5")
	testCompile("junit:junit:4.12")
	// persistence
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
	runtime("mysql:mysql-connector-java")
	// security
	compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.1'
}

// CUCUMBER CONFIGURATION
configurations {
	cucumberRuntime {
		extendsFrom testRuntime
	}
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			if (project.hasProperty("tags")) {
				args = ['--plugin', 'pretty', '--glue', 'eMarket', 'src/test/resources', '--tags', tags]
			} else {
				args = ['--plugin', 'pretty', '--glue', 'eMarket', 'src/test/resources']
			}
		}
	}
}
